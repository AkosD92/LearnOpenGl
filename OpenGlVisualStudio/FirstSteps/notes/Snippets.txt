/*Change color over time*/
float timeValue = (float)glfwGetTime();
float greenValue = (sin(timeValue) / 2.0f) + 0.5f;
int vertexColorLocation = glGetUniformLocation(shaderProgram, "outColor");
glUseProgram(shaderProgram);
glUniform4f(vertexColorLocation, 0.0f, greenValue, 0.0f, 1.0f);

---------------------------------------------------------------------------------------------------------------------

// You can unbind the VAO afterwards so other VAO calls won't accidentally modify this VAO, but this rarely happens. Modifying other
// VAOs requires a call to glBindVertexArray anyways so we generally don't unbind VAOs (nor VBOs) when it's not directly necessary.
// glBindVertexArray(0);

---------------------------------------------------------------------------------------------------------------------
/* Retrieve the matrix uniform locations (would go into while loop)*/
//unsigned int modelLoc = glGetUniformLocation(ourShader.ID, "model");
//unsigned int viewLoc = glGetUniformLocation(ourShader.ID, "view");
/* Pass them to the shaders (3 different ways) */
//glUniformMatrix4fv(modelLoc, 1, GL_FALSE, glm::value_ptr(modelMatrix));
//glUniformMatrix4fv(viewLoc, 1, GL_FALSE, &viewMatrix[0][0]);
---------------------------------------------------------------------------------------------------------------------
