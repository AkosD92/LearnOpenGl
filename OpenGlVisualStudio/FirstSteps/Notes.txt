Note for swap buffers:
	When an application draws in a single buffer the resulting image might display flickering issues.
	This is because the resulting output image is not drawn in an instant,
	but drawn pixel by pixel and usually from left to right and top to bottom.
	Because this image is not displayed at an instant to the user while still being rendered to, the result may contain artifacts.
	To circumvent these issues, windowing applications apply a double buffer for rendering.
	The front buffer contains the final output image that is shown at the screen,
	while all the rendering commands draw to the back buffer.
	As soon as all the rendering commands are finished we swap the back buffer to the front buffer so the image is instantly displayed to the user,
	removing all the aforementioned artifacts. */


Do NOT unbind the EBO while a VAO is active as the bound element buffer object IS stored in the VAO; keep the EBO bound.
You can unbind the VAO afterwards so other VAO calls won't accidentally modify this VAO, but this rarely happens. Modifying other
VAOs requires a call to glBindVertexArray anyways so we generally don't unbind VAOs (nor VBOs) when it's not directly necessary.
